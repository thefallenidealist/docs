# Created 190119
#  vim: set ft=conf ts=4 sw=4 tw=0 fdm=marker noet :
# initial configuration														{{{
# -----------------------------------------------------------------------------
pkg install vm-bhyve
zfs create pool/vm
sysrc vm_enable="YES"
sysrc vm_dir="zfs:pool/vm"
vm init
cp /usr/local/share/examples/vm-bhyve/* /mnt/vm/.templates/

# create switch (see NAT section below)
# ------------------------------------------------------------------------- }}}
# network NAT																{{{
# -----------------------------------------------------------------------------
# https://github.com/churchers/vm-bhyve/wiki/NAT-Configuration
- use wlan as interface for guests
host IP: 192.168.4.1.

/etc/rc.conf
gateway_enable="yes"
pf_enable="yes"

/etc/pf.conf
vm_external_if=wlan0
nat on $vm_external_if from {192.168.1.0/24} to any -> ($vm_external_if)

# check it:
sysctl net.inet.ip.forwarding=1
service pf start
pfctl -s nat

# vm-bhyve
vm switch create -a 192.168.4.1/24 public

# guest configuration - fixed IP:
	ifconfig vtnet0 192.168.4.2
	route add default 192.168.4.1
	# test it:
	ping 192.168.4.1
	ping 1.1.1.1
	# INFO 190120: if ping to Internet doesn't work check pf.conf (addresses), restart pf and try again

# guest configuration - DHCP:
# install OpenBSD's dhcpd:
pkg install -y dhcpd
# or dnsmasq

# TODO 190120:
# - don't use gateway and pf on host
# ------------------------------------------------------------------------- }}}
# console																	{{{
# -----------------------------------------------------------------------------
vm console fbsd-guest #	default

# exit console:
[cu]: ~.

# change console to tmux:
edit .config/system.conf and add
console="tmux"

- don't use 'vm -f' use 'vm start <guest name>'
tmux attach -t <guest name>
# for nested tmux sessions:
<tmux prefix> <tmux 'bind -n <key> send-prefix'
# in my case:
C-j C-k <tmux key, eg: x/d/C-t>
# later changed to:
C-x <tmux key, eg: x/d/C-t>
# ------------------------------------------------------------------------- }}}

# guest - FreeBSD															{{{
# -----------------------------------------------------------------------------
vm iso https://download.freebsd.org/ftp/releases/ISO-IMAGES/12.0/FreeBSD-12.0-RELEASE-amd64-bootonly.iso
vm create fbsd-guest
vm install -f fbsd-guest FreeBSD-12.0-RELEASE-amd64-bootonly.iso
	# -f = foreground
vm console fbsd-guest # if -f is not used
- if dhcpd is not running, use fixed IP address (192.168.4.x)
# ------------------------------------------------------------------------- }}}
# guest - OpenBSD															{{{
# -----------------------------------------------------------------------------
pkg install -y grub2-bhyve
vm iso https://cdn.openbsd.org/pub/OpenBSD/6.4/amd64/install64.iso

# edit ./.templates/openbsd.conf to include latest OpenBSD
#     (change /6.2/ to /6.4/)
vm create -t openbsd obsd
vm -f install obsd install64.iso

# -----------------------------------------------------------------------------
# installer
- use vio0
- use fixed IP: 192.168.4.2
- console: com0, 115200
- MBR: works
- GPT: won't boot with legacy BIOS
# custom partitioning TODO
- pkg: Set -game64.tgz -xbase64.tgz -xshare64.tgz -xfont64.tgz -xserv64.tgz
- pkg: Set -game66.tgz -xbase66.tgz -xshare66.tgz -xfont66.tgz -xserv66.tgz
- timezone: CET

# boot it without CD:
vm -f start obsd
# after boot:
syspatch
vi /etc/motd
# ------------------------------------------------------------------------- }}}
# guest - Windows 7															{{{
# -----------------------------------------------------------------------------
# 190120
pkg install -y bhyve-firmware tigervnc

vm create -t windows win7
vi win7/win7.conf
# for older releases than Windows 10 add this in conf:
disk0_opts="sectorsize=512"
# optional:
graphics_res="1600x900"

# put iso in /mnt/vm/.iso
# rename it so that filename doesn't contain spaces
cd .iso
ln -s Windows... win7.iso

vm install win7 win7.iso
vncviewer 0.0.0.0:5900

pkg delete -y tigervnc
# ------------------------------------------------------------------------- }}}
# guest - Windows 10														{{{
# -----------------------------------------------------------------------------
# 190120
# 190820
pkg install -y bhyve-firmware tigervnc tightvnc

# find .iso which can be booted over UEFI. Try it with command:				{{{
bhyve -c 2 -m 4G -w -u -H \
	-s 0,amd_hostbridge \
	-s 3,ahci-cd,win10-uefi.iso \
	-s 4,ahci-hd,disk.img \
	-s 5,virtio-net,tap0 \
	-s 29,fbuf,tcp=0.0.0.0:5900,w=1600,h=900,vga=off,wait \
	-s 6,xhci,tablet \
	-s 31,lpc -l com1,stdio \
	-l bootrom,/usr/local/share/uefi-firmware/BHYVE_UEFI.fd \
guest
# in another shell:
vncviewer 0.0.0.0:5900
# -> it should say "Press any key to boot from CD/DVD"
# ------------------------------------------------------------------------- }}}

vm create -t windows win10
vi win10/win10.conf
# optional:
graphics_res="1600x900"

vm create -t windows win10
vm install win10 win10-clean-uefi.iso
vncviewer 0.0.0.0:5900
# ------------------------------------------------------------------------- }}}
# quest - Windows 10 2020													{{{
# -----------------------------------------------------------------------------
- .iso should have any spaces in filename
vm create -t windows win10

# edit conf:
graphics_res="1600x900"
# VirtIO HDD:
disk0_type="virtio-blk"
disk0_name="/dev/zvol/backup/vm2/disk-win10"
disk0_dev="custom"
# AHCI CD with VirtIO drivers
disk1_type="ahci-cd"
disk1_dev="custom"
disk1_name="/mnt/vm/.iso/virtio-win-0.1.171.iso"

vm install win10 .iso/Windows_10.iso
# when Windows doesn't recognize HDD:
# - click "Load driver" and load it from CD
# viostor/w10/amd64 (it won't find it automatically if whole CD is searched)

vncviewer 0.0.0.0:5900
# windows errors															{{{
# -----------------------------------------------------------------------------
OOBEKEYBOARD/OOBEMULTIPAGE errors:

# attemp 1:
%windir%\System32\Sysprep\sysprep.exe /oobe /reboot

# attemp 2:
net user administrator /active:yes
net user /add owner mypassword
net localgroup administrators owner /add
cd %windir%\system32\oobe
msoobe.exe
# ------------------------------------------------------------------------- }}}

# after installation:
# VirtIO
# 1) add VirtIO NIC or HDD
disk1_type="virtio-blk"
disk1_name="/dev/zvol/backup/vm2/disk-win10"
disk1_dev="custom"

# 2) boot with attached CD with drivers:
vm install win10 virtio-installer.iso
# or add to win10.conf:
disk1_type="ahci-cd"
disk1_dev="custom"
disk1_name="/mnt/vm/.iso/virtio-win-0.1.171.iso"

# after installation2:
# - enable RDP
# - update display driver to VirtIO

# TODO:
# very slow IO:
https://forums.freebsd.org/threads/bhyve-windows-server-slow-io.71199/#post-456220

# remote desktop
pkg install freerdp

# slowiness
# - NVMe?
# - single CPU?
# - patches?
# -- TPR shadowing disable for non-Xeon CPUs
# ------------------------------------------------------------------------- }}}
# guest - DragonFly BSD														{{{
# -----------------------------------------------------------------------------
vm create -t dragonfly dfbsd
vm -f install dfbsd dfly-x86_64-5.4.1_REL.iso
-> it uses UEFI (so connect via VNC)
# ------------------------------------------------------------------------- }}}
# guest - Debian															{{{
# -----------------------------------------------------------------------------
# create and install as usual/default

If guided LVM partition is used:
edit <vm name>/<vm name>conf and change:
	grub_run_partition="1"
	grub_run_dir="/boot/grub"
to
	grub_run_partition="msdos1"
	grub_run_dir="/grub"
# ------------------------------------------------------------------------- }}}

# guest - Ubuntu															{{{
# -----------------------------------------------------------------------------
# 200426
vm create -t ubuntu ubuntu
vm install -f ubuntu ubuntu-20.04-live-server-amd64.iso
# ------------------------------------------------------------------------- }}}

# guest on ZFS vdev															{{{
# -----------------------------------------------------------------------------
# 200514
zfs create -sV 50G -o volmode=dev backup/vm2/disk-win10

vm.conf:
	disk0_name="/dev/zvol/backup/vm2/disk-win10"
	disk0_type="virtio-blk"
	disk0_dev="custom"
# ------------------------------------------------------------------------- }}}
# dhcpd																		{{{
# -----------------------------------------------------------------------------
# 190120 FreeBSD host + OpenBSD's dhcpd
pkg install -y dhcpd
# network subnet is 192.168.4.x (can be viewed with vm switch list)
# http://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/usr.sbin/dhcpd/dhcpd.conf?rev=1.1&content-type=text/plain

/usr/local/etc/dhcpd.conf
	option  domain-name "experiment-laptop";
	option domain-name-servers 1.1.1.1;

	subnet 192.168.4.0 netmask 255.255.255.0
	{
		option routers 192.168.4.1;
		option domain-name "bhyve-net.int";

		range 192.168.4.100 192.168.4.200;
	}

echo 'dhcpd_enable="YES"' >> /etc/rc.conf
service dhcpd restart
# ------------------------------------------------------------------------- }}}

# GRUB cmds																	{{{
# -----------------------------------------------------------------------------
ls
ls (host)/usr/local/...
# ------------------------------------------------------------------------- }}}


vm stop <guest name>
vm stopall
vm destroy <guest name>
vm configure <guest name>
vm image list
bhyvectl --vm=win10 --destroy
# list VMs:
ll /dev/vmm/

# USB (PCI) thru															{{{
#------------------------------------------------------------------------------
# 190713
# check if CPU has support:
acpidump -t | grep DMAR
> DMAR: Length=208, Revision=1, Checksum=247,

# check if PCI card has support (MSI interrupt):
xhci0@pci0:0:20:0:      class=0x0c0330 card=0x21fb17aa chip=0x1e318086 rev=0x04 hdr=0x00
    vendor     = 'Intel Corporation'
    device     = '7 Series/C210 Series Chipset Family USB xHCI Host Controller'
    class      = serial bus
    subclass   = USB
    cap 01[70] = powerspec 2  supports D0 D3  current D0
    cap 05[80] = MSI supports 8 messages, 64 bit enabled with 1 message
# INFO: echi0 and ehci1 doesn't have MSI support

#------------------------------------------------------------------------------
# /boot/loader.conf (both lines are need):
vmm_load="YES"
pptdevs="0/20/0"

- reboot

# debian.conf (vm-bhyve)
passthru0="0/20/0"

# XXX if wrong passthru device is provided (echi0 or ehci1 which doesn't have MSI):
vm start -f debian
- GRUB screen appears
- nothing
- vm/debian/vm-bhyve.log:
  Jul 13 14:52:28: bhyve exited with status 4

# XXX
- not even one extern or internal (mSATA) connetor seems to be connected to 0/20/0
#-------------------------------------------------------------------------- }}}
# PCI passthru 2nd attempt													{{{
# -----------------------------------------------------------------------------
# 200608
pciconf -l | egrep 'ehci|xhci'
# no need for rebooting and editing /boot/loader.conf with pptdevs="0/20/0 0/26/0 0/29/0"
# - same results with and without xhci in kernel
# - same results with devctl and pptdevs in loader.conf
devctl detach pci0:20:0 ; devctl set driver pci0:20:0 ppt
devctl detach pci0:26:0 ; devctl set driver pci0:26:0 ppt
devctl detach pci0:29:0 ; devctl set driver pci0:29:0 ppt

- 0/20/0 is left USB on T430s - USB devices (and controller) will be recognized but USB stick won't work

# with https://reviews.freebsd.org/rS349184 applied
- FreeBSD and Debian:
	passthru0="0/20/0"
	# start vm -> host crash
	vtd_add_device: device 0 is not in scope for any DMA remapping unit
	- caused by vmm.ko patch (not in 12.1-RELEASE)
	- commenting panic() line in vtd.c will still result in crash (reason: page fault)
	- reverting patch causes FreeBSD and Debian to boot

# without https://reviews.freebsd.org/rS349184 applied
- FreeBSD boots, connecting USB:
	xhci0: Resetting controller
	usb_alloc_device: device init 2 failed (USB_ERR_TIMEOUT, ignored)
	ugen0.2: <Unknown > at usbus0 (disconnected)
	uhub_reattach_port: could not allocate new device
	uhub0: at usbus0, port 1, addr 1 (disconnected)
	xhci0: Port routing mask set to 0xffffffff
	uhub0: <0x8086 XHCI root HUB, class 9/0, rev 3.00/1.00, addr 1> on usbus0
	uhub0: 8 ports with 8 removable, self powered
- later, FreeBSD and Debian:
  - won't boot
  # - no differences between when it worked and ain't (same patch enabled/disabled)
  - difference: GENERIC kernel vs mine


# FreeBSD 13.0-CURRENT (June 4th 2020):
- same kernel panic as patched 12.1-RELEASE
# ------------------------------------------------------------------------- }}}
# sound																		{{{
#------------------------------------------------------------------------------
# 200315
# apply patches from -CURRENT to 12.1-RELEASE:
https://svnweb.freebsd.org/base?view=revision&revision=349335
https://svnweb.freebsd.org/base?view=revision&revision=350255
# or commits in GitHub FreeBSD -master tree:
650d07809ae099ab8f062186dcaf0b5034f00fb7
b151e337d8188a838234f142a86ee7bbe6653a50

- create VM with vm-bhyve
- add to /mnt/vm/<vm name>/<vm name>.conf
bhyve_options="-s 6,hda,play=/dev/dsp,rec=/dev/dsp"

# or with bare bhyve command (not tested):
# -s 6,hda,play=/dev/dsp,rec=/dev/dsp

After running FreeBSD 12.1 bootonly CD it works:
- there is /dev/dsp
- cat /bin/sh > /dev/dsp
#-------------------------------------------------------------------------- }}}

# errors 											{{{
# -----------------------------------------------------------------------------
# 2020.04
# bhyve exited with status 1
- trying to install Windows 10
- Windows 10.iso has spaces in filename
-> change spaces with something else and it will work

# 2020.06
vm debian - works in GRUB, later: Abort trap
vm-bhyve.log: bhyve exited with status 134
caused by option:
bhyve_options="-s 6,hda,play=/dev/dsp,rec=/dev/dsp"
- sound is over DP monitor
hw.snd.default_unit: 3
# Fix:
# - remove:
bhyve_options="-s 6,hda,play=/dev/dsp,rec=/dev/dsp"
# ------------------------------------------------------------------------- }}}
